{% set version = "0.24.2" %}

package:
  name: scikit-learn
  version: {{ version }}

source:
  url: https://github.com/scikit-learn/scikit-learn/archive/{{ version }}.tar.gz
  sha256: 642fb016bfe4bb7539ba6bf4e6dd5a95d2d25638387040b0f5eefdb84a840297
  patches:
   - patches/0001-ignore-errors-when-tearing-down-modules.patch

build:
  number: 1
  skip: true  # [py2k]
  script:
    - rm $PREFIX/include/cblas.h  # [not win]
    - del /f %LIBRARY_INC%\cblas.h  # [win]
    # build the C files in parallel. This helps beat the
    # time limit consistently on drone.io
    - {{ PYTHON }} setup.py build_ext -j{{ CPU_COUNT }}
    - {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - scipy                                  # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - llvm-openmp  # [osx]
  host:
    - python
    - pip
    - cython >=0.28.5
    - libcblas
    - numpy
    - scipy >=0.17.0
    - joblib >=0.11
    - threadpoolctl
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - scipy
    - joblib >=0.11
    - threadpoolctl

{% set tests_to_skip = "_not_a_real_test" %}
# https://github.com/scikit-learn/scikit-learn/issues/20335
{% set tests_to_skip = tests_to_skip + " or test_loadings_converges" %}
# Numerically unstable test numerical difference in test
{% set tests_to_skip = tests_to_skip + " or test_mlp_regressor_dtypes_casting" %}         # [ppc64le]
{% if aarch64 and python_impl == "pypy" %}
    # skip longest-running tests on drone as pypy build times out otherwise;
    # since pytest -k skips on string matches, try to match accurately to avoid
    # skipping more than intended; all run >40sec, up to 4+ min, see pypy-on-arch-slowest.txt
    {% set tests_to_skip = tests_to_skip + " or (test_voting and test_gridsearch) or test_check_estimator_clones"
                                         + " or (test_bagging and (test_regression or test_classification))"
                                         + " or (check_estimator_sparse_data and (Sequential or TSNE or RFECV))"
                                         + " or (test_ensemble_heterogeneous_estimators_behavior and stacking)"
                                         + " or test_rfe_cv_groups or test_nan_support"
                                         + " or (test_tsne_different_square_distances and exact)"
                                         + " or test_linear_models_cv_fit_for_all_backends[MultiTaskLassoCV-loky]"
                                         + " or (test_forest and test_class_weights[RandomForestClassifier])"
                                         + " or test_kde_sample_weights or test_uniform_grid[exact]"
                                         + " or test_parallel_classification or test_sparse_coder_parallel_mmap"
                                         + " or test_sparse_precomputed_distance or test_n_iter_no_change_inf"
                                         + " or test_sample_without_replacement_algorithms" %}
{% endif %}

test:
  requires:
    - pytest >=3.3.0
    - cython >=0.28.5
    - pytest-xdist
    - pytest-timeout
  imports:
    - sklearn
  commands:
    # Some tests take alot of memory, and seem to cause segfaults when memory runs out
    {% set cpus = 2 if ppc64le else (8 if aarch64 else CPU_COUNT) %}
    # reduce contention for parallelism (xdist-workers, openblas, openmp) that
    # actually increases the runtime and can lead to timeouts on drone/travis
    - export OMP_NUM_THREADS=1                 # [aarch64 or ppc64le]
    - pytest -v --pyargs sklearn -k "not ({{ tests_to_skip }})" -n {{ cpus }} --durations=50

about:
  home: http://scikit-learn.org/
  license: BSD-3-Clause
  license_file: COPYING
  summary: A set of python modules for machine learning and data mining

extra:
  recipe-maintainers:
    - amueller
    - astaric
    - jakirkham
    - ogrisel
    - ocefpaf
    - lesteve
    - jnothman
    - rth
    - adrinjalali
    - glemaitre
    - jeremiedbb
