From a0f407313563c4db35fbca629d751dcd66ea3e64 Mon Sep 17 00:00:00 2001
From: "Thomas J. Fan" <thomasjpfan@gmail.com>
Date: Sun, 26 Dec 2021 08:57:28 -0500
Subject: [PATCH] MAINT Use push_back directly in dbscan_inner

---
 sklearn/cluster/_dbscan_inner.pyx | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

diff --git a/sklearn/cluster/_dbscan_inner.pyx b/sklearn/cluster/_dbscan_inner.pyx
index e293bdd93a..1550c980f5 100644
--- a/sklearn/cluster/_dbscan_inner.pyx
+++ b/sklearn/cluster/_dbscan_inner.pyx
@@ -10,12 +10,6 @@ import numpy as np
 np.import_array()
 
 
-# Work around Cython bug: C++ exceptions are not caught unless thrown within
-# a cdef function with an "except +" declaration.
-cdef extern inline void push(vector[np.npy_intp] &stack, np.npy_intp i) except +:
-    stack.push_back(i)
-
-
 def dbscan_inner(np.ndarray[np.uint8_t, ndim=1, mode='c'] is_core,
                  np.ndarray[object, ndim=1] neighborhoods,
                  np.ndarray[np.npy_intp, ndim=1, mode='c'] labels):
@@ -39,7 +33,7 @@ def dbscan_inner(np.ndarray[np.uint8_t, ndim=1, mode='c'] is_core,
                     for i in range(neighb.shape[0]):
                         v = neighb[i]
                         if labels[v] == -1:
-                            push(stack, v)
+                            stack.push_back(v)
 
             if stack.size() == 0:
                 break
-- 
2.34.1

